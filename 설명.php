


main (또는 master) 브랜치: 프로젝트의 안정적인 최신 버전을 유지하는 브랜치입니다.
배포 가능한 코드가 항상 이 브랜치에 있어야 합니다.
직접적으로 커밋하는 것을 피하고, 다른 브랜치에서 개발된 내용을 병합(merge)하는 방식으로만 업데이트합니다.

main 브랜치는 항상 안정적이어야 한다:
main 브랜치에는 언제든지 배포 가능한 코드가 있어야 합니다.
직접적인 커밋은 최소화하고, 다른 브랜치에서 충분히 테스트된 코드를 병합하는 방식으로만 업데이트합니다.


브랜치 네이밍
feature/기능_이름, bugfix/버그_내용, hotfix/긴급_수정, refactor/리팩토링_내용


잦은 커밋과 푸시: 작업을 작은 단위로 나누어 "자주 커밋"하고, 원격 저장소에 푸시하여 백업하고 팀원들과 공유합니다.


충돌 해결 연습: 협업에서는 충돌이 불가피하게 발생합니다. PhpStorm의 Merge Revision 도구를 사용하여 충돌 해결에 익숙해지는 것이 중요합니다.

Pull Request (PR) 활용: 실제 협업에서는 위와 같은 직접적인 master 브랜치 푸시보다는 Pull Request (또는 Merge Request) 워크플로우를 강력히 권장합니다.
-> 2명 정도의 작은 규모 팀에서는 Pull Request (PR) 워크플로우가 오히려 불필요한 오버헤드(Overhead)로 느껴질 수 있습니다.
-> Pair Programming (짝 프로그래밍) 활용 추천

